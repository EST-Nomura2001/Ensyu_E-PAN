// <auto-generated />
using System;
using Ensyu_E_PAN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ensyu_E_PAN.Migrations
{
    [DbContext(typeof(AnyDataDbContext))]
    [Migration("20250623064706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.AllShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Confirm_Flg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fixed_Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Rec_Flg")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Sending_Flg")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Sum_WorkTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("All_Shifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DateSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("D_DayPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day_Shift_Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("End_BreakTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("N_DayPrice")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("P_End_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("P_Start_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Start_BreakTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Start_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("T_DayPrice")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("T_WorkTime_All")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("T_WorkTime_D")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("T_WorkTime_N")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Today")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("U_End_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("U_Start_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("User_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Work_Roll_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Day_Shift_Id");

                    b.HasIndex("User_Id");

                    b.HasIndex("Work_Roll_Id");

                    b.ToTable("Date_Schedules");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DayShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("All_Shift_Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sum_TotalCost")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Sum_WorkTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("All_Shift_Id");

                    b.ToTable("Day_Shifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.UserDateShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Date_Schedule_Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Shift_Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("User_Shift_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Date_Schedule_Id");

                    b.HasIndex("User_Shift_Id");

                    b.ToTable("USER_DATE_SHIFTS", (string)null);
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.UserShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date_Ym")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day_Shifts_Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("List_Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month_Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shift_Id")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Total_WorkTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("U_Confirm_Flg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("User_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Day_Shifts_Id");

                    b.HasIndex("Shift_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("User_Shifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("C_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Fax")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Post_Code")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Roll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roll_Lists");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("C_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Fax")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Post_Code")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login_Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Roll_Cd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stores_Cd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimePrice_D")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimePrice_N")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Login_Id")
                        .IsUnique();

                    b.HasIndex("Roll_Cd");

                    b.HasIndex("Stores_Cd");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.WorkRoll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkRoll_Lists");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Order.OrderItemList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Item_Cd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("P_Order_List_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Item_Cd");

                    b.HasIndex("P_Order_List_Id");

                    b.ToTable("Order_Item_Lists");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Order.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Company_Cd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Confirm_Flg")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Delivery_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Order_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Payment_Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payment_Terms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quotation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Store_Cd")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tax")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Company_Cd");

                    b.HasIndex("Store_Cd");

                    b.ToTable("Purchase_Orders");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DateSchedule", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Attendance.DayShift", "DayShift")
                        .WithMany("DateSchedules")
                        .HasForeignKey("Day_Shift_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Masters.User", "User")
                        .WithMany("DateSchedules")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Masters.WorkRoll", "WorkRoll")
                        .WithMany("DateSchedules")
                        .HasForeignKey("Work_Roll_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DayShift");

                    b.Navigation("User");

                    b.Navigation("WorkRoll");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DayShift", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Attendance.AllShift", "AllShift")
                        .WithMany("DayShifts")
                        .HasForeignKey("All_Shift_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllShift");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.UserDateShift", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Attendance.DateSchedule", "DateSchedule")
                        .WithMany("UserDateShifts")
                        .HasForeignKey("Date_Schedule_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Attendance.UserShift", "UserShift")
                        .WithMany("UserDateShifts")
                        .HasForeignKey("User_Shift_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DateSchedule");

                    b.Navigation("UserShift");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.UserShift", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Attendance.DayShift", "DayShift")
                        .WithMany("UserShifts")
                        .HasForeignKey("Day_Shifts_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Attendance.AllShift", "AllShift")
                        .WithMany("UserShifts")
                        .HasForeignKey("Shift_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Masters.User", "User")
                        .WithMany("UserShifts")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllShift");

                    b.Navigation("DayShift");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.User", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Masters.Roll", "Roll")
                        .WithMany("Users")
                        .HasForeignKey("Roll_Cd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Masters.Store", "Store")
                        .WithMany("Users")
                        .HasForeignKey("Stores_Cd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roll");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Order.OrderItemList", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Masters.Item", "Item")
                        .WithMany("OrderItemLists")
                        .HasForeignKey("Item_Cd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Order.PurchaseOrder", "PurchaseOrder")
                        .WithMany("OrderItemLists")
                        .HasForeignKey("P_Order_List_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Order.PurchaseOrder", b =>
                {
                    b.HasOne("Ensyu_E_PAN.Models.Masters.Company", "Company")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Company_Cd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ensyu_E_PAN.Models.Masters.Store", "Store")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("Store_Cd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.AllShift", b =>
                {
                    b.Navigation("DayShifts");

                    b.Navigation("UserShifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DateSchedule", b =>
                {
                    b.Navigation("UserDateShifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.DayShift", b =>
                {
                    b.Navigation("DateSchedules");

                    b.Navigation("UserShifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Attendance.UserShift", b =>
                {
                    b.Navigation("UserDateShifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Company", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Item", b =>
                {
                    b.Navigation("OrderItemLists");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Roll", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.Store", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.User", b =>
                {
                    b.Navigation("DateSchedules");

                    b.Navigation("UserShifts");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Masters.WorkRoll", b =>
                {
                    b.Navigation("DateSchedules");
                });

            modelBuilder.Entity("Ensyu_E_PAN.Models.Order.PurchaseOrder", b =>
                {
                    b.Navigation("OrderItemLists");
                });
#pragma warning restore 612, 618
        }
    }
}
